#!/usr/bin/env bash

# fail fast
set -eu

# parse args
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}

BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)
OPT_DIR=$BP_DIR/opt

######### Create ngrok startup script
mkdir $BUILD_DIR/.ngrok2;
cp ${OPT_DIR}/ngrok_config.yml $BUILD_DIR/.ngrok2/ngrok.yml

########## Create profile.d startup script
#cp ${OPT_DIR}/sshd.sh $BUILD_DIR/.profile.d/sshd.sh

######### Install SSH Relay launcher
cp $OPT_DIR/ssh_relay $BUILD_DIR/.heroku/bin/ssh_relay
chmod +x $BUILD_DIR/.heroku/bin/ssh_relay

######### Configure SSH Daemon
mkdir -p $BUILD_DIR/.ssh
if [ ! -f $BUILD_DIR/.ssh/authorized_keys ]; then
  ssh-keygen -f $BUILD_DIR/.ssh/id_rsa -t rsa -N ''
  cat $BUILD_DIR/.ssh/id_rsa.pub > $BUILD_DIR/.ssh/authorized_keys
fi
cat << EOF > $BUILD_DIR/.ssh/sshd_config
HostKey /app/.ssh/id_rsa
AuthorizedKeysFile /app/.ssh/authorized_keys
UsePrivilegeSeparation no
EOF

#########################################################################

# config
APACHE_VERSION="2.4.2"
APACHE_PATH="apache"

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR
if [ ! -d $BUILD_DIR/www ]; then
  mkdir $BUILD_DIR/www
fi

if [ ! -d $BUILD_DIR/conf ]; then
  mkdir $BUILD_DIR/conf
fi

APACHE_URL="https://s3.amazonaws.com/cga-buildpack/apache-$APACHE_VERSION.tar.gz"
echo "-----> Bundling Apache version $APACHE_VERSION"
curl --silent --max-time 60 --location "$APACHE_URL" | tar xz

# update config files
cp $LP_DIR/conf/httpd.conf $APACHE_PATH/conf
